"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[909],{3905:(e,o,a)=>{a.d(o,{Zo:()=>d,kt:()=>k});var n=a(7294);function r(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function t(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?t(Object(a),!0).forEach((function(o){r(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function i(e,o){if(null==e)return{};var a,n,r=function(e,o){if(null==e)return{};var a,n,r={},t=Object.keys(e);for(n=0;n<t.length;n++)a=t[n],o.indexOf(a)>=0||(r[a]=e[a]);return r}(e,o);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)a=t[n],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var o=n.useContext(p),a=o;return e&&(a="function"==typeof e?e(o):s(s({},o),e)),a},d=function(e){var o=m(e.components);return n.createElement(p.Provider,{value:o},e.children)},c="mdxType",l={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},u=n.forwardRef((function(e,o){var a=e.components,r=e.mdxType,t=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,k=c["".concat(p,".").concat(u)]||c[u]||l[u]||t;return a?n.createElement(k,s(s({ref:o},d),{},{components:a})):n.createElement(k,s({ref:o},d))}));function k(e,o){var a=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var t=a.length,s=new Array(t);s[0]=u;var i={};for(var p in o)hasOwnProperty.call(o,p)&&(i[p]=o[p]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var m=2;m<t;m++)s[m]=a[m];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1535:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>t,metadata:()=>i,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const t={},s="Primeiros passos",i={unversionedId:"burger-queen-api/guides/GETTING-STARTED-DOCKER",id:"burger-queen-api/guides/GETTING-STARTED-DOCKER",title:"Primeiros passos",description:"Depois de criar o fork e clonar o reposit\xf3rio em seu computador,",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/04-burger-queen-api/guides/GETTING-STARTED-DOCKER.md",sourceDirName:"04-burger-queen-api/guides",slug:"/burger-queen-api/guides/GETTING-STARTED-DOCKER",permalink:"/bootcamp/pt/docs/burger-queen-api/guides/GETTING-STARTED-DOCKER",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04-burger-queen-api/guides/GETTING-STARTED-DOCKER.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Burger Queen - API com Node.js",permalink:"/bootcamp/pt/docs/burger-queen-api/"},next:{title:"Primeiros passos com o MongoDB",permalink:"/bootcamp/pt/docs/burger-queen-api/guides/GETTING-STARTED-MONGODB"}},p={},m=[{value:"1. Instale o docker e o docker-compose",id:"1-instale-o-docker-e-o-docker-compose",level:2},{value:"2. Configurando o &quot;servi\xe7o&quot; de banco de dados",id:"2-configurando-o-servi\xe7o-de-banco-de-dados",level:2},{value:"3. Configurar conex\xe3o ao BD no servi\xe7o node",id:"3-configurar-conex\xe3o-ao-bd-no-servi\xe7o-node",level:2},{value:"4. Iniciar, reiniciar e parar os servi\xe7os com <code>docker-compose</code>",id:"4-iniciar-reiniciar-e-parar-os-servi\xe7os-com-docker-compose",level:2},{value:"5. Familiarize-se com a administra\xe7\xe3o de cont\xeaineres",id:"5-familiarize-se-com-a-administra\xe7\xe3o-de-cont\xeaineres",level:2},{value:"6. Opcionalmente, instale uma interface gr\xe1fica para administrar dados",id:"6-opcionalmente-instale-uma-interface-gr\xe1fica-para-administrar-dados",level:2},{value:"7. Execute os testes de integra\xe7\xe3o (e2e)",id:"7-execute-os-testes-de-integra\xe7\xe3o-e2e",level:2}],d={toc:m},c="wrapper";function l(e){let{components:o,...a}=e;return(0,r.kt)(c,(0,n.Z)({},d,a,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"primeiros-passos"},"Primeiros passos"),(0,r.kt)("p",null,"Depois de criar o fork e clonar o reposit\xf3rio em seu computador,\nantes de come\xe7ar a codificar, precisamos criar nosso ",(0,r.kt)("em",{parentName:"p"},"ambiente de desenvolvimento"),".\nRecomendamos que voc\xea siga as etapas a seguir:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1-instalar-docker-y-docker-compose"},"1. Instalar ",(0,r.kt)("inlineCode",{parentName:"a"},"docker")," e ",(0,r.kt)("inlineCode",{parentName:"a"},"docker-compose"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2-configurar-servicio-de-base-de-datos"},'2. Configurar o "servi\xe7o" de banco de dados')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#3-configurar-conexi%C3%B3n-a-bbdd-en-servicio-node"},'3. Configurar a conex\xe3o com o banco de dados no "servi\xe7o" node')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#4-iniciar-re-iniciar-y-parar-los-servicios-con-docker-compose"},"4. Iniciar, reiniciar e parar os servi\xe7os com ",(0,r.kt)("inlineCode",{parentName:"a"},"docker-compose"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#5-familiarizarte-con-admisitraci%C3%B3n-de-contenedores"},"5. Familiarizar-se com a administra\xe7\xe3o de cont\xeaineres")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#6-opcionalmente-instalar-interfaz-gr%C3%A1fica-para-administrar-data"},"6. Opcionalmente, instalar uma interface gr\xe1fica para administrar dados")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#7-corre-las-pruebas-de-integraci%C3%B3n-e2e"},"7. Execute os testes de integra\xe7\xe3o (e2e)"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"1-instale-o-docker-e-o-docker-compose"},"1. Instale o docker e o docker-compose"),(0,r.kt)("p",null,"Independentemente do banco de dados que voc\xea escolher, neste projeto iremos executar\nlocalmente (em nosso computador) o servidor de banco de dados usando\ncont\xeaineres do Docker, em vez de instalar o programa diretamente em nosso\ncomputador. Al\xe9m disso, tamb\xe9m iremos usar a ferramenta ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose")," para\norquestrar nossos cont\xeaineres: banco de dados e servidor web (node)."),(0,r.kt)("p",null,"Nos seguintes links, voc\xea pode ver como instalar o ",(0,r.kt)("inlineCode",{parentName:"p"},"docker")," e o ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose"),"\nem seu sistema operacional."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"Get Docker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install/"},"Install Docker Compose"))),(0,r.kt)("h2",{id:"2-configurando-o-servi\xe7o-de-banco-de-dados"},'2. Configurando o "servi\xe7o" de banco de dados'),(0,r.kt)("p",null,"O boilerplate deste projeto inclui um arquivo\n",(0,r.kt)("a",{parentName:"p",href:"./docker-compose.yml"},(0,r.kt)("inlineCode",{parentName:"a"},"docker-compose.yml"))," que j\xe1 cont\xe9m parte da\nconfigura\xe7\xe3o do ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose"),". Neste arquivo, voc\xea ver\xe1 que existem dois\nservi\xe7os listados: ",(0,r.kt)("inlineCode",{parentName:"p"},"db")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"nod"),"e. Nossa aplica\xe7\xe3o consistir\xe1 em dois servidores:\num servidor de banco de dados (o servi\xe7o ",(0,r.kt)("inlineCode",{parentName:"p"},"db"),") e um servidor web implementado\nem Node.js (o servi\xe7o ",(0,r.kt)("inlineCode",{parentName:"p"},"node"),")."),(0,r.kt)("p",null,"Na se\xe7\xe3o correspondente ao servi\xe7o ",(0,r.kt)("inlineCode",{parentName:"p"},"db"),", existem tr\xeas coisas importantes que\nprecisaremos completar:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Qual ",(0,r.kt)("em",{parentName:"li"},"imagem")," (",(0,r.kt)("inlineCode",{parentName:"li"},"image"),") queremos usar. Imagens recomendadas:\n",(0,r.kt)("a",{parentName:"li",href:"https://hub.docker.com/_/mongo"},"mongo"),",\n",(0,r.kt)("a",{parentName:"li",href:"https://hub.docker.com/_/postgres"},"postgres")," y\n",(0,r.kt)("a",{parentName:"li",href:"https://hub.docker.com/_/mysql"},"mysql"),"."),(0,r.kt)("li",{parentName:"ul"},"Quais volumes (",(0,r.kt)("inlineCode",{parentName:"li"},"volumes"),"), arquivos ou pastas queremos mapear para o\ncont\xeainer, como por exemplo, o diret\xf3rio de dados (a pasta onde o\nbanco de dados ir\xe1 armazenar seus arquivos).  "),(0,r.kt)("li",{parentName:"ul"},"As vari\xe1veis de ambiente (",(0,r.kt)("inlineCode",{parentName:"li"},"environment"),") necess\xe1rias para configurar nosso\nbanco de dados e usu\xe1rios. Esses dados ser\xe3o utilizados posteriormente\npara configurar a conex\xe3o a partir do Node.js.")),(0,r.kt)("p",null,"Exemplo de servi\xe7o ",(0,r.kt)("inlineCode",{parentName:"p"},"db")," usando: ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/mongo"},"MongoDB"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"db:\n  image: mongo:4\n  volumes:\n    - ./db-data:/data/db\n  environment:\n    MONGO_INITDB_ROOT_USERNAME: bq\n    MONGO_INITDB_ROOT_PASSWORD: secret\n  restart: always\n  networks:\n    - private\n")),(0,r.kt)("p",null,"Exemplo de servi\xe7o ",(0,r.kt)("inlineCode",{parentName:"p"},"db")," usando ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/postgres"},"PostgreSQL"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"db:\n  image: postgres:13\n  volumes:\n    - ./db-data:/var/lib/postgresql/data\n  environment:\n    POSTGRES_PASSWORD: secret\n  restart: always\n  networks:\n    - private\n")),(0,r.kt)("p",null,"Exemplo de servi\xe7o ",(0,r.kt)("inlineCode",{parentName:"p"},"db")," usando ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/mysql"},"MySQL"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"db:\n  image: mysql:5\n  volumes:\n    - ./db-data:/var/lib/mysql\n  environment:\n    MYSQL_ROOT_PASSWORD: supersecret\n    MYSQL_DATABASE: bq\n    MYSQL_USER: bq\n    MYSQL_PASSWORD: secret\n  restart: always\n  networks:\n    - private\n")),(0,r.kt)("h2",{id:"3-configurar-conex\xe3o-ao-bd-no-servi\xe7o-node"},"3. Configurar conex\xe3o ao BD no servi\xe7o node"),(0,r.kt)("p",null,"Agora que temos a configura\xe7\xe3o do servi\xe7o db, precisamos completar a\nconfigura\xe7\xe3o do servi\xe7o Node.js. Em particular, queremos definir o valor\nda vari\xe1vel de ambiente ",(0,r.kt)("inlineCode",{parentName:"p"},"DB_URL"),", onde colocaremos a connection string\ncorrespondente ao nosso banco de dados. Esta string de conex\xe3o segue\no formato de URL e se parece com isso:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"protocol://username:password@host:port/dbname?opt1=val1&...\n")),(0,r.kt)("p",null,"Aqui, substituiremos ",(0,r.kt)("inlineCode",{parentName:"p"},"protocol")," pelo nome do protocolo do banco de dados\nescolhido (",(0,r.kt)("inlineCode",{parentName:"p"},"mongodb"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"postgresql")," ou ",(0,r.kt)("inlineCode",{parentName:"p"},"mysql"),"), e ",(0,r.kt)("inlineCode",{parentName:"p"},"username"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"password")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"dbname"),"\npelos valores usados na configura\xe7\xe3o do servi\xe7o db no ponto anterior.\nNeste caso, o valor de host ser\xe1 ",(0,r.kt)("inlineCode",{parentName:"p"},"db"),", que \xe9 o nome do servi\xe7o de banco de dados\nna configura\xe7\xe3o do ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),", e podemos nos referir a ele pelo nome\nna rede interna entre os cont\xeaineres.\nSeguindo os exemplos do ponto anterior, a vari\xe1vel ",(0,r.kt)("inlineCode",{parentName:"p"},"DB_URL")," no ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),"\nseria assim:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"MongoDB:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"DB_URL: mongodb://bq:secret@db:27017/bq?authSource=admin\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"PostgreSQL:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"DB_URL: postgresql://postgres:secret@db:5432/postgres?schema=public\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"MySQL:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"DB_URL: mysql://bq:secret@db:3306/bq\n")))),(0,r.kt)("h2",{id:"4-iniciar-reiniciar-e-parar-os-servi\xe7os-com-docker-compose"},"4. Iniciar, reiniciar e parar os servi\xe7os com ",(0,r.kt)("inlineCode",{parentName:"h2"},"docker-compose")),(0,r.kt)("p",null,"Agora que temos nossa configura\xe7\xe3o do docker-compose pronta,\nvamos ver como podemos iniciar a aplica\xe7\xe3o.\nPara isso, usamos o comando ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose up")," dentro da pasta do\nnosso projeto (onde est\xe1 o arquivo ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose up\n")),(0,r.kt)("p",null,"Para interromper o comando e ter o terminal de volta ao ",(0,r.kt)("em",{parentName:"p"},"prompt"),",\nvoc\xea pode usar a combina\xe7\xe3o de teclas ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl + C"),"."),(0,r.kt)("p",null,"Se usarmos o comando dessa forma, sem op\xe7\xf5es, ele iniciar\xe1 todos os servi\xe7os\ndescritos no ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),". Alternativamente, podemos iniciar um servi\xe7o\nespec\xedfico adicionando o nome do servi\xe7o ao comando.\nPor exemplo, se quisermos iniciar apenas o servi\xe7o de banco de dados:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose up db\n")),(0,r.kt)("p",null,"Tamb\xe9m temos a op\xe7\xe3o de iniciar os servi\xe7os e execut\xe1-los em segundo plano,\ncomo ",(0,r.kt)("em",{parentName:"p"},"daemons"),", usando a op\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"-d"),", para que o prompt seja\nimediatamente retornado e os servi\xe7os continuem em execu\xe7\xe3o."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose up -d\n")),(0,r.kt)("p",null,"Al\xe9m do comando ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose up"),", que constr\xf3i, (re)cria, inicia e se conecta\naos cont\xeaineres de um servi\xe7o, tamb\xe9m temos comandos dispon\xedveis para\niniciar (",(0,r.kt)("inlineCode",{parentName:"p"},"start"),"), reiniciar (",(0,r.kt)("inlineCode",{parentName:"p"},"restart"),") e parar (",(0,r.kt)("inlineCode",{parentName:"p"},"stop"),") servi\xe7os com cont\xeaineres\nj\xe1 existentes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose start\ndocker-compose stop\ndocker-compose restart\n")),(0,r.kt)("p",null,"Assim como com ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose up"),", com esses outros comandos tamb\xe9m podemos\nespecificar com qual servi\xe7o queremos interagir (ou com todos, se n\xe3o for especificado).\nPor exemplo, para iniciar, reiniciar e depois parar o servidor de banco de dados:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose start db\ndocker-compose stop db\ndocker-compose restart db\n")),(0,r.kt)("h2",{id:"5-familiarize-se-com-a-administra\xe7\xe3o-de-cont\xeaineres"},"5. Familiarize-se com a administra\xe7\xe3o de cont\xeaineres"),(0,r.kt)("p",null,"Al\xe9m dos comandos que j\xe1 vimos com ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose"),", recomendamos\nque voc\xea se familiarize com outros comandos (entre outros) para poder ",(0,r.kt)("em",{parentName:"p"},"administrar"),"\nseus cont\xeaineres."),(0,r.kt)("p",null,"O comando ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose ps")," exibe uma lista com os cont\xeaineres ",(0,r.kt)("em",{parentName:"p"},"ativos"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose ps\n")),(0,r.kt)("p",null,"Tamb\xe9m podemos listar ",(0,r.kt)("em",{parentName:"p"},"todos")," os cont\xeaineres, incluindo os que est\xe3o parados,\nusando a op\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"-a"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose ps -a\n")),(0,r.kt)("p",null,"Para remover os cont\xeaineres dos servi\xe7os:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose rm\n")),(0,r.kt)("p",null,"Assim como nos comandos anteriores, tamb\xe9m podemos remover os cont\xeaineres\nde um servi\xe7o espec\xedfico indicando seu nome:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose rm db\n")),(0,r.kt)("p",null,"Por fim, quando executamos nossos servi\xe7os em segundo plano, como ",(0,r.kt)("em",{parentName:"p"},"daemons"),",\npara nos conectarmos aos cont\xeaineres e vermos os ",(0,r.kt)("em",{parentName:"p"},"logs"),", podemos usar:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose logs\n")),(0,r.kt)("p",null,"Podemos adicionar tamb\xe9m a op\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"-f")," para fazer streaming dos logs e ficar ouvindo\nassim como especificar um servi\xe7o em particular. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose logs -f db\n")),(0,r.kt)("p",null,"Lembre-se de sempre consultar a ",(0,r.kt)("em",{parentName:"p"},"ajuda")," do ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose")," com o\ncomando ",(0,r.kt)("inlineCode",{parentName:"p"},"help"),". Por exemplo, se quisermos ver a ajuda do subcomando\nup, poder\xedamos fazer isso:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose help up\n")),(0,r.kt)("h2",{id:"6-opcionalmente-instale-uma-interface-gr\xe1fica-para-administrar-dados"},"6. Opcionalmente, instale uma interface gr\xe1fica para administrar dados"),(0,r.kt)("p",null,"Ao trabalhar com bancos de dados, \xe9 muito comum usar algum tipo de interface\ngr\xe1fica que nos permita visualizar e manipular nossos dados de forma visual.\nExistem op\xe7\xf5es para cada banco de dados. Recomendamos as seguintes:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.mongodb.com/products/compass"},"Compass")," (MongoDB),\n",(0,r.kt)("a",{parentName:"p",href:"https://www.mysql.com/products/workbench/"},"Workbench")," (MySQL),\n",(0,r.kt)("a",{parentName:"p",href:"https://www.pgadmin.org/"},"pgAdmin")," (PostgreSQL)."),(0,r.kt)("p",null,"Se voc\xea deseja usar esse tipo de ferramenta (como o ",(0,r.kt)("inlineCode",{parentName:"p"},"Compass")," ou o ",(0,r.kt)("inlineCode",{parentName:"p"},"Workbench"),"),\nprovavelmente precisar\xe1 tornar seu banco de dados vis\xedvel fora do Docker.\nPara fazer isso, voc\xea pode mapear a porta do banco de dados no cont\xeainer\npara uma porta dispon\xedvel no host do Docker (normalmente, seu computador).\nNormalmente, vamos mapear essas portas padr\xe3o (por exemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"27017")," para o MongoDB)\npara n\xfameros de porta diferentes, pois esses programas e/ou suas portas podem estar\nem uso. Por exemplo, se estivermos usando o MongoDB, poder\xedamos adicionar\no seguinte mapeamento de portas ao servi\xe7o db em nosso ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"ports:\n  - 28017:27017\n")),(0,r.kt)("p",null,"Ao listar as portas de um cont\xeainer ou servi\xe7o no ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),",\ntenha em mente que o n\xfamero \xe0 direita \xe9 a porta no cont\xeainer\n(rede privada do Docker), enquanto o n\xfamero \xe0 esquerda \xe9 a porta no\nhost do Docker (geralmente o seu computador - ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," ou ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost"),').\nNo exemplo acima, estamos "mapeando" a porta ',(0,r.kt)("inlineCode",{parentName:"p"},"27017")," do cont\xeainer para a\nporta ",(0,r.kt)("inlineCode",{parentName:"p"},"28017")," do host do Docker."),(0,r.kt)("p",null,"Se voc\xea estiver usando PostgreSQL ou MySQL, as portas que gostar\xedamos de mapear\nseriam ",(0,r.kt)("inlineCode",{parentName:"p"},"5432")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"330"),"6, respectivamente."),(0,r.kt)("p",null,'Se estamos "expondo" a porta em nosso computador (o "host"),\ntamb\xe9m ser\xe1 necess\xe1rio conectar o cont\xeainer ',(0,r.kt)("inlineCode",{parentName:"p"},"db"),' \xe0 rede "p\xfablica":'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"networks:\n  - public\n  - private\n")),(0,r.kt)("p",null,"Ap\xf3s essa altera\xe7\xe3o, voc\xea poder\xe1 acessar usando ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," ou ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost"),"\ne a porta \xe0 qual mapeamos, ",(0,r.kt)("inlineCode",{parentName:"p"},"28017")," neste exemplo."),(0,r.kt)("p",null,"Se voc\xea escolher o ",(0,r.kt)("a",{parentName:"p",href:"https://www.pgadmin.org/"},"pgAdmin")," (PostgreSQL),\na op\xe7\xe3o mais f\xe1cil \xe9 usar o pgAdmin como um cont\xeainer e adicion\xe1-lo\ncomo um novo servi\xe7o ao nosso ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),". Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"pgadmin:\n  image: dpage/pgadmin4\n  restart: always\n  environment:\n    PGADMIN_DEFAULT_EMAIL: user@domain.com\n    PGADMIN_DEFAULT_PASSWORD: secret\n  ports:\n    - 8088:80\n  networks:\n    - public\n    - private\n")),(0,r.kt)("p",null,"NOTA: Para conectar desde pgAdmin usando um cont\xeainer, use o ",(0,r.kt)("em",{parentName:"p"},"nome")," do cont\xeainer\ndo banco de dados (por exemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"XXX-001-burger-queen-api_db_1"),") como nome do host\npara que o pgAdmin possa se conectar atrav\xe9s da rede ",(0,r.kt)("em",{parentName:"p"},"privada"),"."),(0,r.kt)("h2",{id:"7-execute-os-testes-de-integra\xe7\xe3o-e2e"},"7. Execute os testes de integra\xe7\xe3o (e2e)"),(0,r.kt)("p",null,"O ",(0,r.kt)("em",{parentName:"p"},"boilerplate")," deste projeto j\xe1 inclui testes ",(0,r.kt)("inlineCode",{parentName:"p"},"e2e")," (end-to-end) ou de integra\xe7\xe3o,\nque s\xe3o respons\xe1veis por testar nossa aplica\xe7\xe3o como um todo, atrav\xe9s da\ninterface HTTP. Ao contr\xe1rio dos testes unit\xe1rios, onde importamos ou requeremos\num m\xf3dulo e testamos uma fun\xe7\xe3o de forma isolada, aqui iremos iniciar toda a\naplica\xe7\xe3o e test\xe1-la como se estiv\xe9ssemos usando no mundo real. Para isso,\nos testes de integra\xe7\xe3o precisar\xe3o de um banco de dados e estar\xe3o ouvindo em\numa porta de rede."),(0,r.kt)("p",null,"Para executar os testes e2e em uma inst\xe2ncia local, podemos usar:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm run test:e2e\n")),(0,r.kt)("p",null,"Isso iniciar\xe1 a aplica\xe7\xe3o com ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start")," e executar\xe1 os testes na\nURL desta inst\xe2ncia (por padr\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:8080"),").\nIsso pressup\xf5e que o banco de dados esteja dispon\xedvel."),(0,r.kt)("p",null,"Alternativamente, e talvez mais f\xe1cil de usar, podemos iniciar nossa aplica\xe7\xe3o\nusando ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose"),", ou at\xe9 mesmo em produ\xe7\xe3o, e em seguida, executar os\ntestes e2e passando a URL da aplica\xe7\xe3o na vari\xe1vel de ambiente ",(0,r.kt)("inlineCode",{parentName:"p"},"REMOTE_URL"),".\nPor exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"REMOTE_URL=http://127.0.0.1:8080 npm run test:e2e\n")),(0,r.kt)("p",null,"Ao especificar ",(0,r.kt)("inlineCode",{parentName:"p"},"REMOTE_URL"),", os testes n\xe3o tentar\xe3o ",(0,r.kt)("em",{parentName:"p"},"iniciar")," um servidor local,\nmas usar\xe3o diretamente a URL fornecida, assumindo que a aplica\xe7\xe3o esteja dispon\xedvel\nnessa URL. Isso nos permite testar tamb\xe9m em URLs remotas. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"REMOTE_URL=https://api.my-super-app.com npm run test:e2e\n")))}l.isMDXComponent=!0}}]);